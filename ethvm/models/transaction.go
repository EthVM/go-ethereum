// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCES:
 *     block.schema.v1.asvc
 *     pendingtx.schema.v1.asvc
 */

package models

import (
	"io"
)

type Transaction struct {
	Hash              []byte
	Root              []byte
	Index             int32
	Timestamp         int64
	Nonce             []byte
	NonceHash         []byte
	From              []byte
	FromBalance       []byte
	To                UnionNullBytes
	ToBalance         UnionNullBytes
	Input             []byte
	ContractAddress   UnionNullBytes
	Value             []byte
	Gas               []byte
	GasPrice          []byte
	GasUsed           []byte
	CumulativeGasUsed []byte
	V                 []byte
	R                 []byte
	S                 []byte
	Status            int32
	LogsBloom         []byte
	Logs              []*Log
	Trace             *Trace
}

func DeserializeTransaction(r io.Reader) (*Transaction, error) {
	return readTransaction(r)
}

func NewTransaction() *Transaction {
	v := &Transaction{
		Logs:  make([]*Log, 0),
		Trace: NewTrace(),
	}

	return v
}

func (r *Transaction) Schema() string {
	return "{\"fields\":[{\"doc\":\"Hash of the transaction\",\"name\":\"hash\",\"type\":\"bytes\"},{\"doc\":\"Root of the parent block\",\"name\":\"root\",\"type\":\"bytes\"},{\"doc\":\"Integer of the transactions index position in the block\",\"name\":\"index\",\"type\":\"int\"},{\"doc\":\"Unix timestamp for when the transaction was collated\",\"name\":\"timestamp\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"doc\":\"Number of transactions sent from a given address\",\"name\":\"nonce\",\"type\":\"bytes\"},{\"doc\":\"SHA3 of the transaction nonce\",\"name\":\"nonceHash\",\"type\":\"bytes\"},{\"doc\":\"Address of the sender\",\"name\":\"from\",\"type\":\"bytes\"},{\"doc\":\"Balance of the sender\",\"name\":\"fromBalance\",\"type\":\"bytes\"},{\"doc\":\"Address of the recipient (or null when contract creation)\",\"name\":\"to\",\"type\":[\"null\",\"bytes\"]},{\"doc\":\"Balance of the receiver (or null when contract creation)\",\"name\":\"toBalance\",\"type\":[\"null\",\"bytes\"]},{\"doc\":\"The data send along with the transaction\",\"name\":\"input\",\"type\":\"bytes\"},{\"doc\":\"If a contract is created, the address of it (or null if is just a regular transaction)\",\"name\":\"contractAddress\",\"type\":[\"null\",\"bytes\"]},{\"doc\":\"Amount of value transferred in Wei\",\"name\":\"value\",\"type\":\"bytes\"},{\"doc\":\"Amount of gas provided by the sender\",\"name\":\"gas\",\"type\":\"bytes\"},{\"doc\":\"Amount of gas price provided by the sender in Wei\",\"name\":\"gasPrice\",\"type\":\"bytes\"},{\"doc\":\"Amount of gas used consumed by the transaction\",\"name\":\"gasUsed\",\"type\":\"bytes\"},{\"doc\":\"Cumulative gas used by the transaction\",\"name\":\"cumulativeGasUsed\",\"type\":\"bytes\"},{\"doc\":\"Transaction signature v\",\"name\":\"v\",\"type\":\"bytes\"},{\"doc\":\"Transaction signature r\",\"name\":\"r\",\"type\":\"bytes\"},{\"doc\":\"Transaction signature s\",\"name\":\"s\",\"type\":\"bytes\"},{\"doc\":\"Transaction result status\",\"name\":\"status\",\"type\":\"int\"},{\"doc\":\"Generated and encoded logs by the transaction\",\"name\":\"logsBloom\",\"type\":\"bytes\"},{\"doc\":\"Logs produced by executing smart contracts\",\"name\":\"logs\",\"type\":{\"items\":{\"fields\":[{\"desc\":\"Address of the contract that generated the event\",\"name\":\"address\",\"type\":\"bytes\"},{\"desc\":\"List of topics provided by the contract\",\"name\":\"topics\",\"type\":{\"items\":\"bytes\",\"type\":\"array\"}},{\"desc\":\"Supplied by the contract, usually ABI-encoded\",\"name\":\"data\",\"type\":\"bytes\"},{\"desc\":\"Index of the log in the receipt\",\"name\":\"index\",\"type\":\"int\"},{\"desc\":\"True if this log was reverted due to a chain reorganisation\",\"name\":\"removed\",\"type\":\"boolean\"}],\"name\":\"Log\",\"namespace\":\"io.enkrypt.bolt.models.avro\",\"type\":\"record\"},\"type\":\"array\"}},{\"doc\":\"Trace that describes contract creation, destruction or intenal transactions\",\"name\":\"trace\",\"type\":{\"fields\":[{\"desc\":\"Signals if an error happened during execution\",\"name\":\"isError\",\"type\":\"boolean\"},{\"desc\":\"Stores the error message\",\"name\":\"msg\",\"type\":\"string\"},{\"desc\":\"An array describing transfers\",\"name\":\"transfers\",\"type\":{\"items\":{\"fields\":[{\"doc\":\"Type of op executed inside the transaction\",\"name\":\"op\",\"type\":\"int\"},{\"doc\":\"Raw value of the transaction\",\"name\":\"value\",\"type\":\"bytes\"},{\"doc\":\"Address of the sender\",\"name\":\"from\",\"type\":\"bytes\"},{\"doc\":\"Balance of the sender\",\"name\":\"fromBalance\",\"type\":\"bytes\"},{\"doc\":\"Address of the receiver\",\"name\":\"to\",\"type\":\"bytes\"},{\"doc\":\"Balance of the receiver\",\"name\":\"toBalance\",\"type\":\"bytes\"},{\"doc\":\"Raw input data\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"namespace\":\"io.enkrypt.bolt.models.avro\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"Trace\",\"namespace\":\"io.enkrypt.bolt.models.avro\",\"type\":\"record\"}}],\"name\":\"Transaction\",\"namespace\":\"io.enkrypt.bolt.models.avro\",\"type\":\"record\"}"
}

func (r *Transaction) Serialize(w io.Writer) error {
	return writeTransaction(r, w)
}
